/* #Project Library */
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
struct book
{
    int no;
	char title[20];
	char author[20];
	float price;
	int copies;
};
struct book value(struct book);
int main()
{
	int i,n,pos,option,num=1;
    struct book b[10];
    
    while(num!=0)
    {
        printf("\n 1.Reading book");
        printf("\n 2.Print book details");
        printf("\n 3.List all avalible books"); 
        printf("\n 4.Search based on number");
        printf("\n 5.Search for book based on title");
        printf("\n 6.Number of avalible copies");
        printf("\n 7.Insert a book at given position");
        printf("\n 8.Update a book");
        printf("\n 9.Exit\n");
      printf("Enter your option:");
      scanf("%d",&option);
    
    if(option==1)
    {
      printf("How many books details do you want to enter:");
      scanf("%d",&n);
      read(b,n); //reading book
    }
    else if(option==2)
       print(b,n); //printing function
        
    else if(option==3) 
       available(b,n); //available books
        
    else if(option==4)
       based_on_number(b,n); //number wise books
       
    else if(option==5)
       based_on_title(b,n); //search based on title
       
    else if(option==6)
       copies(b,n); //avalible no of copies
       
    else if(option==7)
     insert_at_pos(b,pos);  //insert at new position
        
    else if(option==8)
       update_book(b,n);  //update a books
       

      printf("\n Enter '1' to continue: \n Enter '0' to exit:\n Enter your choice:");
      scanf("%d",&num);
        
 }       
}


read(struct book b[ ],int n)     //reading function
{
	printf("\n------Reading books details------\n");
	int i;
	
    for(i=0;i<n;i++)
    {
    	
	    printf("\nEnter Book %d details\n\n",i+1);
	    printf("Enter book no:");
		scanf("%d",&b[i].no);
	    printf("Enter title:");
	    scanf("%s",b[i].title);
	    printf("Enter Author name:");
	    scanf("%s",b[i].author);
	    printf("Enter price:");
	    scanf("%f",&b[i].price);
	    printf("Enter copies of a book:");
	    scanf("%d",&b[i].copies);
	}
}

print(struct book b[ ],int n)          //printing function
{
	int i;
	printf("\n------Books Details------\n");
	for(i=0;i<n;i++)
	{
		printf("\nBook %d details:\n",i+1);
	    printf("\nBook no :%d",b[i].no);
	    printf("\nTitle   :%s",b[i].title);
	    printf("\nAuthor  :%s",b[i].author);
        printf("\nPrice   :%f\n",b[i].price);
	}
}

available(struct book b[ ],int n)          //available books
{
	printf("\n------Available Books Details------\n");
	print(b,n);
	
}
based_on_number(struct book b[ ],int n)          //searching a book based on title
{
	int num;
	int i,j;
	printf("\n---Searching a book by its title---\n");
	printf("\nEnter book number:");
	scanf("%d",&num);
	printf("\n------Your searched book Details------\n");
	for(i=0;i<n;i++)
	{
	    if(b[i].no==num)
	    {
		    printf("\nBook %d details:\n",i+1);
	        printf("\nBook no :%d",b[i].no);
	        printf("\nTitle   :%s",b[i].title);
	        printf("\nAuthor  :%s",b[i].author);
            printf("\nPrice   :%f\n",b[i].price);
		}
    }
}

based_on_title(struct book b[ ],int n)          //searching a book based on title
{
	char title[20];
	int i,j;
	printf("\n---Searching a book by its title---\n");
	printf("\nEnter book title:");
	scanf("%s",title);
	printf("\n------Your searched book Details------\n");
	for(i=0;i<n;i++)
	{
	    if(strcmp(b[i].title,title)==0)
	    {
		    printf("\nBook %d details:\n",i+1);
	        printf("\nBook no :%d",b[i].no);
	        printf("\nTitle   :%s",b[i].title);
	        printf("\nAuthor  :%s",b[i].author);
            printf("\nPrice   :%f\n",b[i].price);
		}
    }
}





update_book(struct book b[ ],int n)          //update a book
{
	int i,p; 
	printf("\n------Book updation------\n");
	printf("\nEnter a book number to update:");
	scanf("%d",&p);  //u=updating book number
	
    printf("\n-------Enter new book details------\n");
   
	printf("\nEnter book no:");
	scanf("%d",&b[p-1].no);
	printf("Enter title:");
	scanf("%s",&b[p-1].title);
	printf("Enter Author name:");
	scanf("%s",&b[p-1].author);
    printf("Enter price:");
    scanf("%f",&b[p-1].price);
    
	printf("\n------Books Details after updation------\n");
	for(i=0;i<n;i++)
	{
		printf("\nBook %d details:\n",i+1);
	    printf("\nBook no :%d",b[i].no);
	    printf("\nTitle   :%s",b[i].title);
	    printf("\nAuthor  :%s",b[i].author);
        printf("\nPrice   :%f\n",b[i].price);
	}
}

copies(struct book b[ ],int n)          //available no.of copies for a book
{
	int i,j,c[20],size;
	
	for(i=0;i<n;i++)
	{
		printf("\nEnter available copies for this book:'%s':",b[i].title);
		scanf("%d",&c[i]);
    }

     printf("\n------No.of copies available for a book title------\n");
	  for(i=0;i<n;i++)

		printf("\nAvailable copies for this book:'%s'' is %d",b[i].copies,c[i]);
}
insert_at_pos(struct book b[], int pos)
{
    int i,n;
    struct book p,c;
    printf("\nPlease Enter the location of a Element you want to insert\n");
  scanf("%d", &pos);
  
 
     p=value(c);
  
  for (i = n; i >= pos - 1; i--)
   {
         b[i+1] = b[i];
         b[pos]=p;
         
         
   }
  
 
}
 struct book value(struct book c)
{
    
    
    printf("Enter book no:");
	scanf("%d",&c.no);
	    printf("Enter title:");
	    scanf("%s",c.title);
	    printf("Enter Author name:");
	    scanf("%s",c.author);
	    printf("Enter price:");
	    scanf("%f",&c.price);
	    printf("Enter copies of a book:");
	    scanf("%d",&c.copies);
}
